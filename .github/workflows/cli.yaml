name: Create Release

on:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write
  actions: write
  deployments: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]

    env:
      APP_NAME: hedhog
      APP_DIR: cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22

      - name: Build
        run: |
          cd ${{ env.APP_DIR }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ../${{ env.APP_NAME }}-${{ matrix.goos }}-${{ matrix.goarch }}
          cd ..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ${{ env.APP_NAME }}-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest

    env:
      APP_NAME: hedhog

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts (Linux)
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-linux-amd64
          path: ${{ env.APP_NAME }}-linux-amd64
      - name: Download build artifacts (Windows)
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-windows-amd64
          path: ${{ env.APP_NAME }}-windows-amd64
      - name: Download build artifacts (MacOS)
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-darwin-amd64
          path: ${{ env.APP_NAME }}-darwin-amd64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.APP_NAME }}-linux-amd64/${{ env.APP_NAME }}-linux-amd64
          asset_name: ${{ env.APP_NAME }}-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.APP_NAME }}-windows-amd64/${{ env.APP_NAME }}-windows-amd64
          asset_name: ${{ env.APP_NAME }}-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset MacOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.APP_NAME }}-darwin-amd64/${{ env.APP_NAME }}-darwin-amd64
          asset_name: ${{ env.APP_NAME }}-darwin-amd64
          asset_content_type: application/octet-stream
