generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model countries {
  id               Int                @id(map: "PK_b2d7006793e8697ab3ae2deff18") @default(autoincrement())
  name             String             @db.VarChar(50)
  code             String             @db.Char(3)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  locales          locales[]
  person_addresses person_addresses[]
  person_documents person_documents[]
}

model locales {
  id                                Int                                 @id(map: "PK_f7a42a6bd1ee3e584a11eb5b37d") @default(autoincrement())
  code                              String                              @db.Char(2)
  region                            String                              @db.Char(2)
  country_id                        Int
  enabled                           Boolean                             @default(true)
  created_at                        DateTime                            @default(now()) @db.Timestamp(6)
  updated_at                        DateTime                            @default(now()) @db.Timestamp(6)
  countries                         countries                           @relation(fields: [country_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_1b7f006abb609825f10a4d98567")
  menu_translations                 menu_translations[]
  multifactor_translations          multifactor_translations[]
  person_address_type_translations  person_address_type_translations[]
  person_contact_type_translations  person_contact_type_translations[]
  person_document_type_translations person_document_type_translations[]
  person_type_translations          person_type_translations[]
  role_translations                 role_translations[]
  screen_translations               screen_translations[]
  setting_group_translations        setting_group_translations[]
  setting_translations              setting_translations[]
  translations                      translations[]
}

model menu_screens {
  menu_id   Int
  screen_id Int
  screens   screens @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_5fce02e2ce60ad6508a0de01464")
  menus     menus   @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_9b57bb2e47bf2b0dbf693ef456c")

  @@id([menu_id, screen_id], map: "PK_18f770e8566e02e344d1f494dbb")
}

model menu_translations {
  menu_id    Int
  locale_id  Int
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  menus      menus    @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_22d219b4f9b1aaf0131736e3d0d")
  locales    locales  @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c6b09ca9e1eb832fd9b04a18ced")

  @@id([menu_id, locale_id], map: "PK_16bc870180c681c47bb87cb8229")
}

model menus {
  id                Int                 @id(map: "PK_3fec3d93327f4538e0cbd4349c4") @default(autoincrement())
  url               String?             @db.VarChar
  order             Int                 @default(0)
  menu_id           Int?
  icon              String?             @db.VarChar
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  menu_screens      menu_screens[]
  menu_translations menu_translations[]
  role_menus        role_menus[]
}

model multifactor_translations {
  multifactor_id Int
  locale_id      Int
  name           String       @db.VarChar
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  locales        locales      @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_35302e1b5b57d8ed1589f7587c1")
  multifactors   multifactors @relation(fields: [multifactor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_731df6bc1ba60843c73771a1bd9")

  @@id([multifactor_id, locale_id], map: "PK_307e89d7a201bff1feacf9e33e6")
}

model multifactors {
  id                       Int                        @id(map: "PK_8e88fc38e04a53be42acb939e9c") @default(autoincrement())
  created_at               DateTime                   @default(now()) @db.Timestamp(6)
  updated_at               DateTime                   @default(now()) @db.Timestamp(6)
  multifactor_translations multifactor_translations[]
  users                    users[]
}

model role_menus {
  role_id    Int
  menu_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  menus      menus    @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_menus_menus")
  roles      roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_menus_roles")

  @@id([role_id, menu_id], map: "PK_0c02205fabd207a919cb7833813")
}

model role_routes {
  role_id    Int
  route_id   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  roles      roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_routes_roles")
  routes     routes   @relation(fields: [route_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_routes_routes")

  @@id([role_id, route_id], map: "PK_d2641c113ec79d2a55d11ce182b")
}

model role_screens {
  role_id    Int
  screen_id  Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  roles      roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_screens_roles")
  screens    screens  @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_screens_screens")

  @@id([role_id, screen_id], map: "PK_82cdd66bd3fd409bf87b1716c42")
}

model role_translations {
  role_id     Int
  locale_id   Int
  name        String   @db.VarChar
  description String   @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  roles       roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_35c7a5c1552d24e8a9503a61244")
  locales     locales  @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_98294f131403e4e8eb111966213")

  @@id([role_id, locale_id], map: "PK_55903c5cd46a591e47198bcb98a")
}

model role_users {
  role_id    Int
  user_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  roles      roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_users_roles")
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_users_users")

  @@id([role_id, user_id], map: "PK_e976807ebe4fc773c2365d91566")
}

model roles {
  id                Int                 @id(map: "PK_c1433d71a4838793a49dcad46ab") @default(autoincrement())
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  role_menus        role_menus[]
  role_routes       role_routes[]
  role_screens      role_screens[]
  role_translations role_translations[]
  role_users        role_users[]
}

model route_screens {
  route_id   Int
  screen_id  Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  routes     routes   @relation(fields: [route_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_route_screens_routes")
  screens    screens  @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_route_screens_screens")

  @@id([route_id, screen_id], map: "PK_3172af099b6b65644be3bc72acc")
}

model routes {
  id            Int                @id(map: "PK_76100511cdfa1d013c859f01d8b") @default(autoincrement())
  url           String             @db.VarChar
  method        routes_method_enum
  created_at    DateTime           @default(now()) @db.Timestamp(6)
  updated_at    DateTime           @default(now()) @db.Timestamp(6)
  role_routes   role_routes[]
  route_screens route_screens[]

  @@unique([url, method], map: "unique_routes")
}

model screen_translations {
  screen_id   Int
  locale_id   Int
  name        String   @db.VarChar
  description String   @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  locales     locales  @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_9cbee2bf99d4279ff58a34dc3e7")
  screens     screens  @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c0568d6f198d9283a13acec5423")

  @@id([screen_id, locale_id], map: "PK_69d08f4651cf1fda11f4b7cd2b0")
}

model screens {
  id                  Int                   @id(map: "PK_15b65ed44367c5411efccdd7de1") @default(autoincrement())
  slug                String                @unique(map: "UQ_90ab71668d0bc61cff3f669c791") @db.VarChar
  icon                String?               @db.VarChar
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  menu_screens        menu_screens[]
  role_screens        role_screens[]
  route_screens       route_screens[]
  screen_translations screen_translations[]
}

model setting_group_translations {
  locale_id      Int
  group_id       Int
  name           String         @db.VarChar(63)
  description    String?        @db.VarChar(255)
  created_at     DateTime       @default(now()) @db.Timestamp(6)
  updated_at     DateTime       @default(now()) @db.Timestamp(6)
  setting_groups setting_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_38b99c2da9e04cc5df699dd5005")
  locales        locales        @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d9e5def8e7b5aea9e0902246ac2")

  @@id([locale_id, group_id], map: "PK_ca91c40f872f1abca475a9d928c")
}

model setting_groups {
  id                         Int                          @id(map: "PK_d743b68d4f14b4f9088d17c3f95") @default(autoincrement())
  icon                       String                       @db.VarChar(31)
  slug                       String                       @db.VarChar(63)
  created_at                 DateTime                     @default(now()) @db.Timestamp(6)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(6)
  setting_group_translations setting_group_translations[]
  settings                   settings[]
}

model setting_translations {
  locale_id   Int
  setting_id  Int
  description String?  @db.VarChar(255)
  name        String?  @db.VarChar(63)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  locales     locales  @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_1981fbb8d2d872a8d6613b11345")
  settings    settings @relation(fields: [setting_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_bd2e921fb8cf8b3c862bca74ad1")

  @@id([locale_id, setting_id], map: "PK_737d9d307d6ea39b81760328457")
}

model settings {
  id                   Int                    @id(map: "PK_0669fe20e252eb692bf4d344975") @default(autoincrement())
  slug                 String                 @unique(map: "UQ_14378107ac6bb5b9577f6810d59") @db.VarChar(63)
  group_id             Int
  type                 settings_type_enum     @default(string)
  value                String?                @db.VarChar(1023)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  setting_translations setting_translations[]
  setting_groups       setting_groups         @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_35eb8ab2edefee1ddeaf85f4603")
}

model translation_namespaces {
  id           Int            @id(map: "PK_c7b8542f5500a5f0f15080f3fb4") @default(autoincrement())
  name         String         @db.VarChar
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  translations translations[]
}

model translations {
  id                     Int                    @id(map: "PK_aca248c72ae1fb2390f1bf4cd87") @default(autoincrement())
  locale_id              Int
  namespace_id           Int
  name                   String                 @db.VarChar
  value                  String                 @db.VarChar
  created_at             DateTime               @default(now()) @db.Timestamp(6)
  updated_at             DateTime               @default(now()) @db.Timestamp(6)
  translation_namespaces translation_namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f531ade6f56a5fa6fe4285aba10")
  locales                locales                @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_faa4b0066c5625e1abafbfae61f")

  @@unique([locale_id, namespace_id, name], map: "UQ_065d58e595dace2c02111970a89")
}

model users {
  id             Int           @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @default(autoincrement())
  name           String        @db.VarChar
  email          String        @db.VarChar
  password       String        @db.VarChar
  multifactor_id Int?
  code           String?       @db.VarChar
  created_at     DateTime      @default(now()) @db.Timestamp(6)
  updated_at     DateTime      @default(now()) @db.Timestamp(6)
  role_users     role_users[]
  multifactors   multifactors? @relation(fields: [multifactor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_users_to_multifactors_on_multifactor_id")
}

model person_address_type_translations {
  type_id              Int
  locale_id            Int
  name                 String               @db.VarChar(31)
  created_at           DateTime             @default(now()) @db.Timestamp(6)
  updated_at           DateTime             @default(now()) @db.Timestamp(6)
  locales              locales              @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8419d881502082b87280577c72c")
  person_address_types person_address_types @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f0313079a61a71d2911189745e2")

  @@id([type_id, locale_id], map: "PK_2a7a7131a8662c6338a18311622")
}

model person_address_types {
  id                               Int                                @id(map: "PK_f9a5d62dda62d29b60ed7ceec29") @default(autoincrement())
  created_at                       DateTime                           @default(now()) @db.Timestamp(6)
  updated_at                       DateTime                           @default(now()) @db.Timestamp(6)
  person_address_type_translations person_address_type_translations[]
}

model person_addresses {
  id          Int       @id(map: "PK_5589c5d05b3cefd4520bc618fff") @default(autoincrement())
  person_id   Int
  country_id  Int
  primary     Boolean   @default(false)
  street      String?   @db.VarChar(255)
  number      Int?
  complement  String?   @db.VarChar(255)
  district    String?   @db.VarChar(255)
  city        String?   @db.VarChar(255)
  state       String?   @db.VarChar(255)
  postal_code String?   @db.VarChar(20)
  reference   String?   @db.VarChar(60)
  type_id     Int
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  persons     persons   @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c96dbc8d8afeb80efa16023ae48")
  countries   countries @relation(fields: [country_id], references: [id], onUpdate: NoAction, map: "FK_ce16f1214d402c21bdd9d19134e")
}

model person_contact_type_translations {
  type_id              Int
  locale_id            Int
  name                 String               @db.VarChar(63)
  created_at           DateTime             @default(now()) @db.Timestamp(6)
  updated_at           DateTime             @default(now()) @db.Timestamp(6)
  locales              locales              @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ef95932878938a88a9e234c4686")
  person_contact_types person_contact_types @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f07d598c52219eb4e444a645d6c")

  @@id([type_id, locale_id], map: "PK_60fcfc64daf31f4e3dc3568c628")
}

model person_contact_types {
  id                               Int                                @id(map: "PK_6a3a16e815e47dcb22787d621e4") @default(autoincrement())
  created_at                       DateTime                           @default(now()) @db.Timestamp(6)
  updated_at                       DateTime                           @default(now()) @db.Timestamp(6)
  person_contact_type_translations person_contact_type_translations[]
  person_contacts                  person_contacts[]
}

model person_contacts {
  id                   Int                  @id(map: "PK_07b8ffac6f3ee21ad90b7af50e2") @default(autoincrement())
  person_id            Int
  type_id              Int
  primary              Boolean              @default(false)
  value                String               @db.VarChar(255)
  created_at           DateTime             @default(now()) @db.Timestamp(6)
  updated_at           DateTime             @default(now()) @db.Timestamp(6)
  person_contact_types person_contact_types @relation(fields: [type_id], references: [id], onUpdate: NoAction, map: "FK_f81d0f4b512b16d534243ab94bc")
  persons              persons              @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f93c944e8b6efe7d6c247e19e92")

  @@unique([person_id, type_id, value], map: "UQ_person_contact")
}

model person_custom_types {
  id             Int              @id(map: "PK_6c24bd778f1a6080973c3267515") @default(autoincrement())
  name           String           @db.VarChar(31)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  person_customs person_customs[]
}

model person_customs {
  id                  Int                 @id(map: "PK_a29191dea61007536bb4953f79a") @default(autoincrement())
  person_id           Int
  type_id             Int
  name                String              @db.VarChar(50)
  value               String?
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  person_custom_types person_custom_types @relation(fields: [type_id], references: [id], onUpdate: NoAction, map: "FK_2d52716eb78a6193205d5e26b1b")
  persons             persons             @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_fdbad45d2e568c5866f73c39db7")

  @@unique([person_id, name], map: "UQ_person_customs")
}

model person_document_type_translations {
  type_id               Int
  locale_id             Int
  name                  String                @db.VarChar(63)
  created_at            DateTime              @default(now()) @db.Timestamp(6)
  updated_at            DateTime              @default(now()) @db.Timestamp(6)
  person_document_types person_document_types @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_5e133a366959158e3f437a1db42")
  locales               locales               @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_fd43edc9de431cd8c21b02e067e")

  @@id([type_id, locale_id], map: "PK_17e2592b17ffdd4abfc82fc68e9")
}

model person_document_types {
  id                                Int                                 @id(map: "PK_bbc7142cc46575b9342dd2b5ca3") @default(autoincrement())
  created_at                        DateTime                            @default(now()) @db.Timestamp(6)
  updated_at                        DateTime                            @default(now()) @db.Timestamp(6)
  person_document_type_translations person_document_type_translations[]
  person_documents                  person_documents[]
}

model person_documents {
  id                    Int                   @id(map: "PK_01c97611450ec13b16fa4a2f3e5") @default(autoincrement())
  person_id             Int
  type_id               Int
  primary               Boolean               @default(false)
  value                 String                @db.VarChar(63)
  country_id            Int?
  issued_at             DateTime?             @db.Date
  expiry_at             DateTime?             @db.Date
  created_at            DateTime              @default(now()) @db.Timestamp(6)
  updated_at            DateTime              @default(now()) @db.Timestamp(6)
  countries             countries?            @relation(fields: [country_id], references: [id], onUpdate: NoAction, map: "FK_50e6bf8568b624a0cb09f04a29f")
  persons               persons               @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c9de95eb603253addb0dc502bb5")
  person_document_types person_document_types @relation(fields: [type_id], references: [id], onUpdate: NoAction, map: "FK_f8767ba3f4cb87d9dc64fafa654")

  @@unique([person_id, type_id, value], map: "UQ_person_document")
}

model person_type_translations {
  type_id      Int
  locale_id    Int
  name         String       @unique(map: "UQ_055e8fbd9f253063888f5ebdc8a") @db.VarChar(31)
  created_at   DateTime     @default(now()) @db.Timestamp(6)
  updated_at   DateTime     @default(now()) @db.Timestamp(6)
  locales      locales      @relation(fields: [locale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_02dcc0f3e72c82c4c9e3ee5afd5")
  person_types person_types @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_789b53bd731d458732a6ef431db")

  @@id([type_id, locale_id], map: "PK_c63b93c585b550488ea3dd20a13")
}

model person_types {
  id                       Int                        @id(map: "PK_8aba3a0e5f072264285099a82fc") @default(autoincrement())
  created_at               DateTime                   @default(now()) @db.Timestamp(6)
  updated_at               DateTime                   @default(now()) @db.Timestamp(6)
  person_type_translations person_type_translations[]
  persons                  persons[]
}

model persons {
  id               Int                @id(map: "PK_74278d8812a049233ce41440ac7") @default(autoincrement())
  name             String             @db.VarChar(255)
  type_id          Int
  birth_at         DateTime?          @db.Date
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  person_addresses person_addresses[]
  person_contacts  person_contacts[]
  person_customs   person_customs[]
  person_documents person_documents[]
  person_types     person_types       @relation(fields: [type_id], references: [id], onUpdate: NoAction, map: "FK_279db59ec1744e71c6c1014ba57")
}

enum routes_method_enum {
  GET
  POST
  PATCH
  DELETE
  PUT
  OPTIONS
  HEAD
}

enum settings_type_enum {
  string
  number
  boolean
  json
}
