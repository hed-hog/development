generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model multifactors {
  id         Int      @id(map: "PK_8e88fc38e04a53be42acb939e9c") @default(autoincrement())
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  users      users[]
}

model users {
  id             Int           @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @default(autoincrement())
  name           String        @db.VarChar
  email          String        @db.VarChar
  password       String        @db.VarChar
  multifactor_id Int?
  code           String?       @db.VarChar
  created_at     DateTime      @default(now()) @db.Timestamp(6)
  updated_at     DateTime      @default(now()) @db.Timestamp(6)
  role_users     role_users[]
  multifactors   multifactors? @relation(fields: [multifactor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_users_to_multifactors_on_multifactor_id")
}

model screens {
  id            Int             @id(map: "PK_15b65ed44367c5411efccdd7de1") @default(autoincrement())
  name          String          @db.VarChar
  slug          String          @unique(map: "UQ_90ab71668d0bc61cff3f669c791") @db.VarChar
  description   String          @db.VarChar
  icon          String?         @db.VarChar
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  menu_screens  menu_screens[]
  role_screens  role_screens[]
  route_screens route_screens[]
}

model menu_screens {
  menu_id   Int
  screen_id Int
  screens   screens @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_5fce02e2ce60ad6508a0de01464")
  menus     menus   @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_9b57bb2e47bf2b0dbf693ef456c")

  @@id([menu_id, screen_id], map: "PK_18f770e8566e02e344d1f494dbb")
}

model menus {
  id           Int            @id(map: "PK_3fec3d93327f4538e0cbd4349c4") @default(autoincrement())
  name         String         @db.VarChar
  url          String?        @db.VarChar
  order        Int            @default(0)
  menu_id      Int?
  icon         String?        @db.VarChar
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  menu_screens menu_screens[]
  role_menus   role_menus[]
}

model role_menus {
  role_id    Int
  menu_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  menus      menus    @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_menus_menus")
  roles      roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_menus_roles")

  @@id([role_id, menu_id], map: "PK_0c02205fabd207a919cb7833813")
}

model role_routes {
  role_id    Int
  route_id   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  roles      roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_routes_roles")
  routes     routes   @relation(fields: [route_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_routes_routes")

  @@id([role_id, route_id], map: "PK_d2641c113ec79d2a55d11ce182b")
}

model role_screens {
  role_id    Int
  screen_id  Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  roles      roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_screens_roles")
  screens    screens  @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_screens_screens")

  @@id([role_id, screen_id], map: "PK_82cdd66bd3fd409bf87b1716c42")
}

model role_users {
  role_id    Int
  user_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  roles      roles    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_users_roles")
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_role_users_users")

  @@id([role_id, user_id], map: "PK_e976807ebe4fc773c2365d91566")
}

model roles {
  id           Int            @id(map: "PK_c1433d71a4838793a49dcad46ab") @default(autoincrement())
  name         String         @db.VarChar
  description  String         @db.VarChar
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  role_menus   role_menus[]
  role_routes  role_routes[]
  role_screens role_screens[]
  role_users   role_users[]
}

model route_screens {
  route_id   Int
  screen_id  Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  routes     routes   @relation(fields: [route_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_route_screens_routes")
  screens    screens  @relation(fields: [screen_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_route_screens_screens")

  @@id([route_id, screen_id], map: "PK_3172af099b6b65644be3bc72acc")
}

model routes {
  id            Int                @id(map: "PK_76100511cdfa1d013c859f01d8b") @default(autoincrement())
  url           String             @db.VarChar
  method        routes_method_enum
  created_at    DateTime           @default(now()) @db.Timestamp(6)
  updated_at    DateTime           @default(now()) @db.Timestamp(6)
  role_routes   role_routes[]
  route_screens route_screens[]

  @@unique([url, method], map: "unique_routes")
}

model setting_values {
  id          Int      @id(map: "PK_c21069a3e9521c651c52051b939") @default(autoincrement())
  value       String   @db.VarChar(1023)
  name        String   @unique(map: "UQ_107f182a06aebe76c709d58dfbd") @db.VarChar
  description String?  @db.VarChar
  label       String?  @db.VarChar
  setting_id  Int
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  settings    settings @relation(fields: [setting_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_4001238c50d670cf048b157cf9b")
}

model settings {
  id             Int              @id(map: "PK_0669fe20e252eb692bf4d344975") @default(autoincrement())
  name           String           @db.VarChar
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  setting_values setting_values[]
}

model person_addresses {
  id          Int       @id(map: "PK_5589c5d05b3cefd4520bc618fff") @default(autoincrement())
  person_id   Int
  country_id  Int
  primary     Boolean   @default(false)
  street      String?   @db.VarChar(255)
  number      String?   @db.VarChar(50)
  complement  String?   @db.VarChar(255)
  district    String?   @db.VarChar(255)
  city        String?   @db.VarChar(255)
  state       String?   @db.VarChar(255)
  postal_code String?   @db.VarChar(20)
  reference   String?   @db.VarChar(60)
  type_id     String?   @db.VarChar(50)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  persons     persons   @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c96dbc8d8afeb80efa16023ae48")
  countries   countries @relation(fields: [country_id], references: [id], onUpdate: NoAction, map: "FK_ce16f1214d402c21bdd9d19134e")
}

model person_contacts {
  id                   Int                  @id(map: "PK_07b8ffac6f3ee21ad90b7af50e2") @default(autoincrement())
  person_id            Int
  type_id              Int
  primary              Boolean              @default(false)
  value                String               @db.VarChar(255)
  created_at           DateTime             @default(now()) @db.Timestamp(6)
  updated_at           DateTime             @default(now()) @db.Timestamp(6)
  person_contact_types person_contact_types @relation(fields: [type_id], references: [id], onUpdate: NoAction, map: "FK_f81d0f4b512b16d534243ab94bc")
  persons              persons              @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f93c944e8b6efe7d6c247e19e92")

  @@unique([person_id, type_id, value], map: "UQ_person_contact")
}

model person_documents {
  id                    Int                   @id(map: "PK_01c97611450ec13b16fa4a2f3e5") @default(autoincrement())
  person_id             Int
  type_id               Int
  primary               Boolean               @default(false)
  value                 String                @db.VarChar(63)
  country_id            Int?
  issued_at             DateTime?             @db.Date
  expiry_at             DateTime?             @db.Date
  created_at            DateTime              @default(now()) @db.Timestamp(6)
  updated_at            DateTime              @default(now()) @db.Timestamp(6)
  countries             countries?            @relation(fields: [country_id], references: [id], onUpdate: NoAction, map: "FK_50e6bf8568b624a0cb09f04a29f")
  persons               persons               @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c9de95eb603253addb0dc502bb5")
  person_document_types person_document_types @relation(fields: [type_id], references: [id], onUpdate: NoAction, map: "FK_f8767ba3f4cb87d9dc64fafa654")

  @@unique([person_id, type_id, value], map: "UQ_person_document")
}

model person_types {
  id         Int      @id(map: "PK_8aba3a0e5f072264285099a82fc") @default(autoincrement())
  name       String   @unique(map: "UQ_6daf2f7cf1eb3eac141173db9f4") @db.VarChar(50)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model persons {
  id               Int                @id(map: "PK_74278d8812a049233ce41440ac7") @default(autoincrement())
  name             String             @db.VarChar(255)
  type_id          Int
  birth_at         DateTime?          @db.Date
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  person_addresses person_addresses[]
  person_contacts  person_contacts[]
  person_customs   person_customs[]
  person_documents person_documents[]
}

model countries {
  id               Int                @id(map: "PK_b2d7006793e8697ab3ae2deff18") @default(autoincrement())
  name             String             @db.VarChar(50)
  code             String             @db.Char(3)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  person_addresses person_addresses[]
  person_documents person_documents[]
}

model person_address_types {
  id         Int      @id(map: "PK_f9a5d62dda62d29b60ed7ceec29") @default(autoincrement())
  name       String   @db.VarChar(31)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model person_contact_types {
  id              Int               @id(map: "PK_6a3a16e815e47dcb22787d621e4") @default(autoincrement())
  name            String            @db.VarChar(63)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  person_contacts person_contacts[]
}

model person_custom_types {
  id             Int              @id(map: "PK_6c24bd778f1a6080973c3267515") @default(autoincrement())
  name           String           @db.VarChar(31)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  person_customs person_customs[]
}

model person_customs {
  id                  Int                 @id(map: "PK_a29191dea61007536bb4953f79a") @default(autoincrement())
  person_id           Int
  type_id             Int
  name                String              @db.VarChar(50)
  value               String?
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  person_custom_types person_custom_types @relation(fields: [type_id], references: [id], onUpdate: NoAction, map: "FK_2d52716eb78a6193205d5e26b1b")
  persons             persons             @relation(fields: [person_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_fdbad45d2e568c5866f73c39db7")

  @@unique([person_id, name], map: "UQ_person_customs")
}

model person_document_types {
  id               Int                @id(map: "PK_bbc7142cc46575b9342dd2b5ca3") @default(autoincrement())
  name             String             @db.VarChar(63)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  person_documents person_documents[]
}

enum routes_method_enum {
  GET
  POST
  PATCH
  DELETE
  PUT
  OPTIONS
  HEAD
}
