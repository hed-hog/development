import { useApp } from "@/hooks/use-app";
import { Delete, PaginationParams, PaginationResult } from "@/types";
import { ComponentInstanceProperty } from "@/types/models";
import { HttpMethod } from "@/types/http-method";

export function requests() {
  const { request } = useApp();

  const componentInstancePropertyList = async (params: PaginationParams) => {
    return request<PaginationResult<ComponentInstanceProperty>>({
      url: "/component-instance-property",
      params,
    }).then((res) => res.data);
  };

  const componentInstancePropertyGet = async (id: number) => {
    return request<ComponentInstanceProperty>({
      url: `/component-instance-property/${id}`,
    }).then((res) => res.data);
  };

  const componentInstancePropertyCreate = async (
    data: ComponentInstanceProperty,
  ) => {
    return request<ComponentInstanceProperty>({
      url: "/component-instance-property",
      method: HttpMethod.POST,
      data: data,
    }).then((res) => res.data);
  };

  const componentInstancePropertyDelete = async (ids: number[]) => {
    return request<Delete>({
      url: "/component-instance-property",
      data: { ids },
      method: HttpMethod.DELETE,
    }).then((res) => res.data);
  };

  const componentInstancePropertyUpdate = async (params: {
    id: number;
    data: ComponentInstanceProperty;
  }) => {
    const { id, data } = params;
    return request<ComponentInstanceProperty>({
      url: `/component-instance-property/${id}`,
      method: HttpMethod.PATCH,
      data: data,
    }).then((res) => res.data);
  };

  return {
    componentInstancePropertyCreate,
    componentInstancePropertyUpdate,
    componentInstancePropertyDelete,
    componentInstancePropertyList,
    componentInstancePropertyGet,
  };
}
