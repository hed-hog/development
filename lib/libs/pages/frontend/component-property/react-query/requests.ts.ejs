import { useApp } from "@/hooks/use-app";
import { Delete, PaginationParams, PaginationResult } from "@/types";
import { ComponentProperty } from "@/types/models";
import { HttpMethod } from "@/types/http-method";
import { formatDataWithLocale } from "@hedhog/utils";

export function requests() {
  const { request } = useApp();

  const componentPropertyList = async (params: PaginationParams) => {
    return request<PaginationResult<ComponentProperty>>({
      url: "/component-property",
      params,
    }).then((res) => res.data);
  };

  const componentPropertyGet = async (id: number) => {
    return request<ComponentProperty>({
      url: `/component-property/${id}`,
    }).then((res) => res.data);
  };

  const componentPropertyCreate = async (data: ComponentProperty) => {
    return request<ComponentProperty>({
      url: "/component-property",
      method: HttpMethod.POST,
      data: formatDataWithLocale(data),
    }).then((res) => res.data);
  };

  const componentPropertyDelete = async (ids: number[]) => {
    return request<Delete>({
      url: "/component-property",
      data: { ids },
      method: HttpMethod.DELETE,
    }).then((res) => res.data);
  };

  const componentPropertyUpdate = async (params: {
    id: number;
    data: ComponentProperty;
  }) => {
    const { id, data } = params;
    return request<ComponentProperty>({
      url: `/component-property/${id}`,
      method: HttpMethod.PATCH,
      data: formatDataWithLocale(data),
    }).then((res) => res.data);
  };

  return {
    componentPropertyCreate,
    componentPropertyUpdate,
    componentPropertyDelete,
    componentPropertyList,
    componentPropertyGet,
  };
}
