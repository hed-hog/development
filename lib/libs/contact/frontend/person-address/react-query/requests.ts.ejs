import { useApp } from "@/hooks/use-app";
import { Delete, PaginationParams, PaginationResult } from "@/types";
import { PersonAddress } from "@/types/models";
import { HttpMethod } from "@/types/http-method";

export function requests() {
  const { request } = useApp();

  const personAddressList = async (params: PaginationParams) => {
    return request<PaginationResult<PersonAddress>>({
      url: "/person-address",
      params,
    }).then((res) => res.data);
  };

  const personAddressGet = async (id: number) => {
    return request<PersonAddress>({
      url: `/person-address/${id}`,
    }).then((res) => res.data);
  };

  const personAddressCreate = async (data: PersonAddress) => {
    return request<PersonAddress>({
      url: "/person-address",
      method: HttpMethod.POST,
      data: data,
    }).then((res) => res.data);
  };

  const personAddressDelete = async (ids: number[]) => {
    return request<Delete>({
      url: "/person-address",
      data: { ids },
      method: HttpMethod.DELETE,
    }).then((res) => res.data);
  };

  const personAddressUpdate = async (params: {
    id: number;
    data: PersonAddress;
  }) => {
    const { id, data } = params;
    return request<PersonAddress>({
      url: `/person-address/${id}`,
      method: HttpMethod.PATCH,
      data: data,
    }).then((res) => res.data);
  };

  return {
    personAddressCreate,
    personAddressUpdate,
    personAddressDelete,
    personAddressList,
    personAddressGet,
  };
}
